<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.17.1226.1925                               -->
<workbook source-build='10.5.0 (10500.17.1226.1925)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='exercise4-co2-population-reshaped' inline='true' name='federated.129jlfb06gir4d1g6d0kb1a5ube1' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='exercise4-co2-population-reshaped' name='textscan.0w8e6xr1drchdo1c32sfc0gu0qlt'>
            <connection class='textscan' directory='C:/Users/ostus/Desktop/Exercise4' filename='exercise4-co2-population-reshaped.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0w8e6xr1drchdo1c32sfc0gu0qlt' name='exercise4-co2-population-reshaped.csv' table='[exercise4-co2-population-reshaped#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Commercial' ordinal='2' />
            <column datatype='real' name='Electric Power' ordinal='3' />
            <column datatype='real' name='Industrial' ordinal='4' />
            <column datatype='integer' name='Population' ordinal='5' />
            <column datatype='real' name='Residential' ordinal='6' />
            <column datatype='real' name='Transportation' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Commercial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Commercial]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Commercial</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Power</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Electric Power]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Electric Power</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industrial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Industrial]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Industrial</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residential</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residential]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Residential</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transportation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transportation]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Transportation</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Commercal Emission by Pop' datatype='real' name='[Calculation_277815831922028544]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Commercial]/[Population]' />
      </column>
      <column caption='Overall' datatype='real' name='[Calculation_310185450664742912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Commercial]+[Electric Power]+[Industrial]+[Residential]+[Transportation]' />
      </column>
      <column caption='Calculation1' datatype='real' name='[Calculation_744782818391973907]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='' />
      </column>
      <column caption='Transportation Emission by Pop' datatype='real' name='[Commercal Emission by Pop (copy 2) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Transportation]/[Population]' />
      </column>
      <column caption='Residential Commercal Emission by Pop' datatype='real' name='[Commercal Emission by Pop (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Residential]/[Population]' />
      </column>
      <column caption='Overall Emission by Pop' datatype='real' name='[Commercal Emission by Pop (copy) (copy) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_310185450664742912]/[Population]' />
      </column>
      <column caption='Industrial Emission by Pop' datatype='real' name='[Commercal Emission by Pop (copy) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Industrial]/[Population]' />
      </column>
      <column caption='Electric Power Emission by Pop' datatype='real' name='[Commercal Emission by Pop (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Electric Power]/[Population]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_277815831922028544]' derivation='Sum' name='[sum:Calculation_277815831922028544:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Commercal Emission by Pop (copy) (copy)]' derivation='Sum' name='[sum:Commercal Emission by Pop (copy) (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Commercal Emission by Pop (copy)]' derivation='Sum' name='[sum:Commercal Emission by Pop (copy):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.393273' measure-ordering='alphabetic' measure-percentage='0.606727' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.129jlfb06gir4d1g6d0kb1a5ube1].[sum:Calculation_277815831922028544:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.129jlfb06gir4d1g6d0kb1a5ube1].[sum:Commercal Emission by Pop (copy) (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.129jlfb06gir4d1g6d0kb1a5ube1].[sum:Commercal Emission by Pop (copy):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='exercise4-co2-population' inline='true' name='federated.0z5bkyt0p46n1g19pr5sv1l5qffd' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='exercise4-co2-population' name='textscan.1nf68kt1hq9t8w1dcf8mv01dp861'>
            <connection class='textscan' directory='C:/Users/ostus/Desktop/Exercise4' filename='exercise4-co2-population.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='STR([exercise4-co2-population.csv].[Year])+&apos;-&apos;+[exercise4-co2-population.csv].[State]' />
              <expression op='STR([exercise4-co2-population-reshaped.csv].[Year])+&apos;-&apos;+[exercise4-co2-population-reshaped.csv].[State]' />
            </expression>
          </clause>
          <relation connection='textscan.1nf68kt1hq9t8w1dcf8mv01dp861' name='exercise4-co2-population.csv' table='[exercise4-co2-population#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='string' name='Sector' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.1nf68kt1hq9t8w1dcf8mv01dp861' name='exercise4-co2-population-reshaped.csv' table='[exercise4-co2-population-reshaped#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='real' name='Commercial' ordinal='2' />
              <column datatype='real' name='Electric Power' ordinal='3' />
              <column datatype='real' name='Industrial' ordinal='4' />
              <column datatype='integer' name='Population' ordinal='5' />
              <column datatype='real' name='Residential' ordinal='6' />
              <column datatype='real' name='Transportation' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Commercial]' value='[exercise4-co2-population-reshaped.csv].[Commercial]' />
          <map key='[Electric Power]' value='[exercise4-co2-population-reshaped.csv].[Electric Power]' />
          <map key='[Industrial]' value='[exercise4-co2-population-reshaped.csv].[Industrial]' />
          <map key='[Population]' value='[exercise4-co2-population-reshaped.csv].[Population]' />
          <map key='[Residential]' value='[exercise4-co2-population-reshaped.csv].[Residential]' />
          <map key='[Sector]' value='[exercise4-co2-population.csv].[Sector]' />
          <map key='[State (exercise4-co2-population-reshaped.csv)]' value='[exercise4-co2-population-reshaped.csv].[State]' />
          <map key='[State]' value='[exercise4-co2-population.csv].[State]' />
          <map key='[Transportation]' value='[exercise4-co2-population-reshaped.csv].[Transportation]' />
          <map key='[Value]' value='[exercise4-co2-population.csv].[Value]' />
          <map key='[Year (exercise4-co2-population-reshaped.csv)]' value='[exercise4-co2-population-reshaped.csv].[Year]' />
          <map key='[Year]' value='[exercise4-co2-population.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[exercise4-co2-population.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[exercise4-co2-population.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sector</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sector]</local-name>
            <parent-name>[exercise4-co2-population.csv]</parent-name>
            <remote-alias>Sector</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[exercise4-co2-population.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[exercise4-co2-population.csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (exercise4-co2-population-reshaped.csv)]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (exercise4-co2-population-reshaped.csv)]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Commercial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Commercial]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Commercial</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Power</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Electric Power]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Electric Power</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industrial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Industrial]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Industrial</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residential</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residential]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Residential</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transportation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transportation]</local-name>
            <parent-name>[exercise4-co2-population-reshaped.csv]</parent-name>
            <remote-alias>Transportation</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank' datatype='integer' name='[Calculation_744782818372825099]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Value]), &apos;DESC&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Fixed eval' datatype='real' name='[Calculation_744782818375811085]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [State], [Year]: ROUND(MAX(IF ([Sector]=&quot;Population&quot;) Then 0 ELSE [Value] END))}' />
      </column>
      <column caption='Window_Max' datatype='real' name='[Calculation_744782818378850319]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND(WINDOW_MAX(SUM(IF [Sector]=&quot;Population&quot; THEN 0 ELSE [Value] END)))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='check max' datatype='integer' name='[Calculation_744782818379902993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([Value]) = [Calculation_744782818378850319] THEN 1 ELSE 0 END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Value by Population' datatype='real' name='[Calculation_744782818393501718]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Value]/[Population]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Sector Exclude' datatype='string' name='[Sector (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Sector]' />
      </column>
      <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
      <column datatype='string' name='[State (exercise4-co2-population-reshaped.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year (exercise4-co2-population-reshaped.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Sector]' derivation='Attribute' name='[attr:Sector:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <group caption='Action (Sector)' hidden='true' name='[Action (Sector)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sector]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group name='[Year &amp; Sector (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
          <groupfilter function='level-members' level='[Sector]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.391979' measure-ordering='alphabetic' measure-percentage='0.608021' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:Sector:nk]' type='shape'>
            <map to='Economic Sectors/commercial.png'>
              <bucket>&quot;Commercial&quot;</bucket>
            </map>
            <map to='Economic Sectors/electric.png'>
              <bucket>&quot;Electric Power&quot;</bucket>
            </map>
            <map to='Economic Sectors/industry.png'>
              <bucket>&quot;Industrial&quot;</bucket>
            </map>
            <map to='Economic Sectors/residential.png'>
              <bucket>&quot;Residential&quot;</bucket>
            </map>
            <map to='Economic Sectors/transportation.png'>
              <bucket>&quot;Transportation&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Population&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sector:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Commercial&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Transportation&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Residential&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Industrial&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Population&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Electric Power&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[attr:Sector:nk]' type='shape'>
            <map to='Economic Sectors/commercial.png'>
              <bucket>&quot;Commercial&quot;</bucket>
            </map>
            <map to='Economic Sectors/electric.png'>
              <bucket>&quot;Electric Power&quot;</bucket>
            </map>
            <map to='Economic Sectors/industry.png'>
              <bucket>&quot;Industrial&quot;</bucket>
            </map>
            <map to='Economic Sectors/residential.png'>
              <bucket>&quot;Residential&quot;</bucket>
            </map>
            <map to='Economic Sectors/transportation.png'>
              <bucket>&quot;Transportation&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Population&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Sector:nk]' palette='color_blind_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;Commercial&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;Residential&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;Transportation&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;Industrial&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Population&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;Electric Power&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Emissions by Sector' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Emissions by Sector' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='US Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Animation'>
      <table>
        <view>
          <datasources>
            <datasource caption='exercise4-co2-population' name='federated.0z5bkyt0p46n1g19pr5sv1l5qffd' />
          </datasources>
          <datasource-dependencies datasource='federated.0z5bkyt0p46n1g19pr5sv1l5qffd'>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Sector Exclude' datatype='string' name='[Sector (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Sector]' />
            </column>
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Sector (copy)]' derivation='None' name='[none:Sector (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector (copy):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sector (copy):nk]' />
              <groupfilter function='member' level='[none:Sector (copy):nk]' member='&quot;Population&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]' />
              <lod column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]' />
              <geometry column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.284820556640625' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[sum:Value:qk]</rows>
        <cols>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[sum:Population:qk]</cols>
        <pages>
          <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
    </worksheet>
    <worksheet name='Attempted Ribbon Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='exercise4-co2-population' name='federated.0z5bkyt0p46n1g19pr5sv1l5qffd' />
          </datasources>
          <datasource-dependencies datasource='federated.0z5bkyt0p46n1g19pr5sv1l5qffd'>
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Sector]' derivation='Attribute' name='[attr:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Year &amp; Sector (Combined)]' direction='DESC' using='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[sum:Value:qk]' />
          <filter class='categorical' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sector:nk]' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Population&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]</column>
            <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[attr:Sector:nk]' />
              <lod column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Year &amp; Sector (Combined)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[sum:Value:qk]</rows>
        <cols>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Emission by Pop'>
      <table>
        <view>
          <datasources>
            <datasource caption='exercise4-co2-population' name='federated.0z5bkyt0p46n1g19pr5sv1l5qffd' />
          </datasources>
          <datasource-dependencies datasource='federated.0z5bkyt0p46n1g19pr5sv1l5qffd'>
            <column caption='Value by Population' datatype='real' name='[Calculation_744782818393501718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Value]/[Population]' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_744782818393501718]' derivation='Avg' name='[avg:Calculation_744782818393501718:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sector:nk]' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Population&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[avg:Calculation_744782818393501718:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]</rows>
        <cols>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Emission by Pop (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='exercise4-co2-population' name='federated.0z5bkyt0p46n1g19pr5sv1l5qffd' />
          </datasources>
          <datasource-dependencies datasource='federated.0z5bkyt0p46n1g19pr5sv1l5qffd'>
            <column caption='Value by Population' datatype='real' name='[Calculation_744782818393501718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Value]/[Population]' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_744782818393501718]' derivation='Sum' name='[diff:sum:Calculation_744782818393501718:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sector:nk]' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Population&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[diff:sum:Calculation_744782818393501718:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]</rows>
        <cols>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Emissions by Sector'>
      <table>
        <view>
          <datasources>
            <datasource caption='exercise4-co2-population' name='federated.0z5bkyt0p46n1g19pr5sv1l5qffd' />
          </datasources>
          <datasource-dependencies datasource='federated.0z5bkyt0p46n1g19pr5sv1l5qffd'>
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[pcto:sum:Value:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sector:nk]' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Population&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]' direction='DESC' using='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[sum:Value:qk]' />
          <slices>
            <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]</column>
            <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[pcto:sum:Value:qk:3]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[sum:Value:qk]' num-steps='5' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[pcto:sum:Value:qk:3]' num-steps='5' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]' />
              <size column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[pcto:sum:Value:qk:3]' />
              <tooltip column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[sum:Value:qk]' />
              <text column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[pcto:sum:Value:qk:3]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Sector:&#9;</run>
                <run bold='true'>&lt;[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Emissions:&#9;</run>
                <run bold='true'>&lt;[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[pcto:sum:Value:qk:3]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Million Metric Tons CO2:&#9;</run>
                <run bold='true'>&lt;[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[sum:Value:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='20'>&lt;[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[pcto:sum:Value:qk:3]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='bottom' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]</rows>
        <cols />
        <pages>
          <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='exercise4-co2-population' name='federated.0z5bkyt0p46n1g19pr5sv1l5qffd' />
          </datasources>
          <datasource-dependencies datasource='federated.0z5bkyt0p46n1g19pr5sv1l5qffd'>
            <column caption='Fixed eval' datatype='real' name='[Calculation_744782818375811085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [State], [Year]: ROUND(MAX(IF ([Sector]=&quot;Population&quot;) Then 0 ELSE [Value] END))}' />
            </column>
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_744782818375811085]' derivation='Sum' name='[sum:Calculation_744782818375811085:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='134' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[sum:Calculation_744782818375811085:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk] / [federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Year:ok])</rows>
        <cols>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='exercise4-co2-population' name='federated.0z5bkyt0p46n1g19pr5sv1l5qffd' />
          </datasources>
          <datasource-dependencies datasource='federated.0z5bkyt0p46n1g19pr5sv1l5qffd'>
            <column caption='Value by Population' datatype='real' name='[Calculation_744782818393501718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Value]/[Population]' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_744782818393501718]' derivation='Sum' name='[sum:Calculation_744782818393501718:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sector:nk]' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Population&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]' />
              <lod column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[sum:Calculation_744782818393501718:qk]</rows>
        <cols>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='US Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='exercise4-co2-population' name='federated.0z5bkyt0p46n1g19pr5sv1l5qffd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0z5bkyt0p46n1g19pr5sv1l5qffd'>
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Action (Sector)]'>
            <groupfilter function='level-members' level='[Sector]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]'>
            <groupfilter function='level-members' level='[none:Sector:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Year:qk]' included-values='in-range'>
            <min>1990</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]</column>
            <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]</column>
            <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Action (Sector)]</column>
            <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Latitude (generated)]' field-type='quantitative' fold='true' max='13289730.884407334' min='371767.76228259504' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Longitude (generated)]' field-type='quantitative' max='-920042.97433650866' min='-26477164.25911567' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Latitude (generated)]' field-type='quantitative' max='13289730.884407334' min='371767.76228259504' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='tableau-light-gray' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]' />
              <geometry column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[sum:Value:qk]' />
              <lod column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]' />
              <geometry column='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Latitude (generated)] + [federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Latitude (generated)])</rows>
        <cols>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='22' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='20' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
              <zone h='97916' id='17' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
                <zone h='97916' id='13' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
                  <zone h='97916' id='10' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
                    <zone h='97916' id='6' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
                      <zone h='97916' id='4' type='layout-basic' w='98828' x='586' y='1042'>
                        <zone h='4167' id='1' type='text' w='98828' x='586' y='20833'>
                          <formatted-text>
                            <run>gegehh</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='73958' id='14' param='horz' type='layout-flow' w='98828' x='586' y='25000'>
                          <zone fixed-size='233' h='73958' id='3' is-fixed='true' name='Emissions by Sector' w='17643' x='586' y='25000'>
                            <layout-cache type-h='cell' type-w='cell' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='73958' id='11' name='US Map' w='81185' x='18229' y='25000'>
                            <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                        <zone count='1' h='19791' id='23' name='Emissions by Sector' name1='US Map' synchronized='1' trailctrls='0' type='currpage' w='10175' x='586' y='1042'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='19791' id='24' type='text' w='88653' x='10761' y='1042'>
                          <formatted-text>
                            <run>geqhhqh</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Attempted Ribbon Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[attr:Sector:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='Emissions by Sector'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='currpage' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:Sector:nk]' type='shape' />
            <card pane-specification-id='0' param='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[pcto:sum:Value:qk:3]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2010</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window class='worksheet' name='US Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='currpage' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[sum:Value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2005</bucket>
          </multibucket>
        </current-page>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Emissions by Sector'>
          <current-page>
            <multibucket>
              <bucket>2010</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Map'>
          <current-page>
            <multibucket>
              <bucket>2010</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Animation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card trailctrls='0' type='currpage' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1990</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
    </window>
    <window class='worksheet' name='Emission by Pop'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Emission by Pop (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0z5bkyt0p46n1g19pr5sv1l5qffd].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <external>
    <shapes>
      <shape name='Economic Sectors/agriculture.png'>
        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
        Jrs0AAAAAElFTkSuQmCC
      </shape>
      <shape name='Economic Sectors/commercial.png'>
        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
      </shape>
      <shape name='Economic Sectors/electric.png'>
        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
      </shape>
      <shape name='Economic Sectors/industry.png'>
        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
      </shape>
      <shape name='Economic Sectors/residential.png'>
        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
      </shape>
      <shape name='Economic Sectors/transportation.png'>
        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
      </shape>
    </shapes>
  </external>
</workbook>
